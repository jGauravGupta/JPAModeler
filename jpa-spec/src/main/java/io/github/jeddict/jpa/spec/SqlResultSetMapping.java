//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 01:46:14 PM IST 
//
package io.github.jeddict.jpa.spec;

import io.github.jeddict.source.AnnotatedMember;
import io.github.jeddict.source.AnnotationExplorer;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import static java.util.stream.Collectors.toCollection;
import static java.util.stream.Collectors.toList;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlIDREF;
import jakarta.xml.bind.annotation.XmlType;

/**
 *
 *
 * @Target({TYPE}) @Retention(RUNTIME) public @interface SqlResultSetMapping {
 * String name(); EntityResult[] entities() default {}; ConstructorResult[]
 * classes() default{}; ColumnResult[] columns() default {}; }
 *
 *
 *
 * <p>
 * Java class for sql-result-set-mapping complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="sql-result-set-mapping">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="entity-result" type="{http://xmlns.jcp.org/xml/ns/persistence/orm}entity-result" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="constructor-result" type="{http://xmlns.jcp.org/xml/ns/persistence/orm}constructor-result" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="column-result" type="{http://xmlns.jcp.org/xml/ns/persistence/orm}column-result" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sql-result-set-mapping", propOrder = {
    "description",
    "entityResult",
    "constructorResult",
    "columnResult"
})
public class SqlResultSetMapping {

    @XmlAttribute
    @XmlIDREF
    private IdentifiableClass entity;
    protected String description;
    @XmlElement(name = "er")//(name = "entity-result")
    protected List<EntityResult> entityResult;
    @XmlElement(name = "ctr")//(name = "constructor-result")
    protected List<ConstructorResult> constructorResult;
    @XmlElement(name = "cr")//(name = "column-result")
    protected List<ColumnResult> columnResult;
    @XmlAttribute(name = "n", required = true)//(name = "name", required = true)
    protected String name;

    public static SqlResultSetMapping load(AnnotationExplorer annotation) {
        SqlResultSetMapping sqlResultSetMapping = new SqlResultSetMapping();
        annotation.getString("name").ifPresent(sqlResultSetMapping::setName);
        annotation.getString("description").ifPresent(sqlResultSetMapping::setDescription);

        sqlResultSetMapping.entityResult
                = annotation.getAnnotationList("entities")
                        .map(EntityResult::load)
                        .collect(toList());

        sqlResultSetMapping.constructorResult
                = annotation.getAnnotationList("classes")
                        .map(ConstructorResult::load)
                        .collect(toList());

        sqlResultSetMapping.columnResult
                = annotation.getAnnotationList("columns")
                        .map(ColumnResult::load)
                        .collect(toList());

        return sqlResultSetMapping;
    }

    public static Set<SqlResultSetMapping> load(AnnotatedMember member) {
        Set<SqlResultSetMapping> sqlResultSetMappings = new LinkedHashSet<>();
        Optional<AnnotationExplorer> sqlResultSetMappingsOpt = member.getAnnotation(jakarta.persistence.SqlResultSetMappings.class);
        if (sqlResultSetMappingsOpt.isPresent()) {
            sqlResultSetMappings.addAll(
                    sqlResultSetMappingsOpt.get()
                            .getAnnotationList("value")
                            .map(SqlResultSetMapping::load)
                            .collect(toCollection(LinkedHashSet::new))
            );
        }

        sqlResultSetMappings.addAll(
                member.getRepeatableAnnotations(jakarta.persistence.SqlResultSetMapping.class)
                        .map(SqlResultSetMapping::load)
                        .collect(toCollection(LinkedHashSet::new))
        );
        return sqlResultSetMappings;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 41 * hash + (this.name != null ? this.name.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final SqlResultSetMapping other = (SqlResultSetMapping) obj;
        if ((this.name == null) ? (other.name != null) : !this.name.equals(other.name)) {
            return false;
        }
        return true;
    }

    /**
     * Gets the value of the description property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the entityResult property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the entityResult property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntityResult().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EntityResult }
     *
     *
     */
    public List<EntityResult> getEntityResult() {
        if (entityResult == null) {
            entityResult = new ArrayList<>();
        }
        return this.entityResult;
    }

    /**
     * Gets the value of the constructorResult property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the constructorResult property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConstructorResult().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConstructorResult }
     *
     *
     */
    public List<ConstructorResult> getConstructorResult() {
        if (constructorResult == null) {
            constructorResult = new ArrayList<>();
        }
        return this.constructorResult;
    }

    /**
     * Gets the value of the columnResult property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the columnResult property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getColumnResult().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ColumnResult }
     *
     *
     */
    public List<ColumnResult> getColumnResult() {
        if (columnResult == null) {
            columnResult = new ArrayList<>();
        }
        return this.columnResult;
    }

    /**
     * Gets the value of the name property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * @return the entity
     */
    public IdentifiableClass getIdentifiableClass() {
        return entity;
    }

    /**
     * @param clazz the entity to set
     */
    public void setIdentifiableClass(IdentifiableClass clazz) {
        this.entity = clazz;
    }

}
