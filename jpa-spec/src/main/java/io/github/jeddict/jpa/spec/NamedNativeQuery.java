//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.01.21 at 01:52:19 PM IST
//
package io.github.jeddict.jpa.spec;

import io.github.jeddict.jpa.spec.extend.QueryMapping;
import io.github.jeddict.source.AnnotatedMember;
import io.github.jeddict.source.AnnotationExplorer;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import static java.util.stream.Collectors.toList;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;

/**
 *
 *
 * @Target({TYPE}) @Retention(RUNTIME) public @interface NamedNativeQuery {
 * String name(); String query(); QueryHint[] hints() default {}; Class
 * resultClass() default void.class; String resultSetMapping() default "";
 * //named SqlResultSetMapping }
 *
 *
 *
 * <p>
 * Java class for named-native-query complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="named-native-query">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="query" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="hint" type="{http://java.sun.com/xml/ns/persistence/orm}query-hint" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="result-class" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="result-set-mapping" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "named-native-query", propOrder = {
    "hint"
})
public class NamedNativeQuery extends QueryMapping {

    protected List<QueryHint> hint;
    @XmlAttribute(name = "result-class")
    protected String resultClass;
    @XmlAttribute(name = "result-set-mapping")
    protected String resultSetMapping;

    public static NamedNativeQuery load(AnnotationExplorer annotation) {
        NamedNativeQuery namedNativeQuery = new NamedNativeQuery();
        annotation.getString("name").ifPresent(namedNativeQuery::setName);
        annotation.getString("query").ifPresent(namedNativeQuery::setQuery);
        annotation.getClassName("resultClass").ifPresent(namedNativeQuery::setResultClass);
        annotation.getString("resultSetMapping").ifPresent(namedNativeQuery::setResultSetMapping);
        namedNativeQuery.hint = annotation.getAnnotationList("hints")
                .map(hint -> QueryHint.load(hint))
                .collect(toList());
        return namedNativeQuery;
    }

    public static List<NamedNativeQuery> load(AnnotatedMember member) {
        List<NamedNativeQuery> namedNativeQueries = new ArrayList<>();
        Optional<AnnotationExplorer> namedNativeQueriesOpt = member.getAnnotation(jakarta.persistence.NamedNativeQueries.class);
        if (namedNativeQueriesOpt.isPresent()) {
            namedNativeQueries.addAll(
                    namedNativeQueriesOpt.get()
                            .getAnnotationList("value")
                            .map(NamedNativeQuery::load)
                            .collect(toList())
            );
        }

        namedNativeQueries.addAll(
                member.getRepeatableAnnotations(jakarta.persistence.NamedNativeQuery.class)
                        .map(NamedNativeQuery::load)
                        .collect(toList())
        );
        return namedNativeQueries;
    }

    /**
     * Gets the value of the hint property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the hint property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHint().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QueryHint }
     *
     *
     */
    public List<QueryHint> getHint() {
        if (hint == null) {
            hint = new ArrayList<>();
        }
        return this.hint;
    }

    /**
     * Gets the value of the resultClass property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getResultClass() {
        return resultClass;
    }

    /**
     * Sets the value of the resultClass property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setResultClass(String value) {
        this.resultClass = value;
    }

    /**
     * Gets the value of the resultSetMapping property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getResultSetMapping() {
        return resultSetMapping;
    }

    /**
     * Sets the value of the resultSetMapping property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setResultSetMapping(String value) {
        this.resultSetMapping = value;
    }

}
