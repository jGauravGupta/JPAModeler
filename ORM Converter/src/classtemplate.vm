//
// This file was generated by the Jeddict
//
#####################Package Name definition ###########################
#if ($classDef.getPackageName())
package $classDef.getPackageName();
#end

#####################import statements #################################
import java.io.Serializable;
#foreach ( $importStatement in $classDef.getImportSnippets() )
$importStatement

#end
#####################java doc ###############################
#if ($classDef.isJavaDocExist())
$classDef.getJavaDoc()

#end
#if($classDef.getEntityString())
$classDef.getEntityString()
#end
public class $classDef.getClassName() implements Serializable {
#####################member variables ###############################
#foreach( $varDef in $classDef.getVariableDefs() )

## $varDef.type => $varDef.getTypeIdentifier().getVariableType() ## to resolve problem Collection => Collection<Entity>
    private $varDef.type $varDef.name;
#end

#foreach($constructor in $classDef.getConstructors())
    $constructor.getSnippet()

#end
#####################getter/setter #################################
#foreach( $varDef in $classDef.getVariableDefs() )
#set($method = $varDef.getMethodName())
#if($varDef.type == "boolean" || $varDef.type == "java.lang.Boolean" || $varDef.type == "Boolean")
    
    public $varDef.type is$method() {
        return this.$varDef.name;
    }
#else

   public $varDef.type get$method() {
        return this.$varDef.name;
    }
#end

    public void set$method ($varDef.type $varDef.name) {
        this.$varDef.name = $varDef.name;
    }
#end

    @Override
    public boolean equals(Object obj) {
        $classDef.getEqualsMethod().getSnippet()
    }

    @Override
    public int hashCode() {
        $classDef.getHashcodeMethod().getSnippet()
    }

    @Override
    public String toString() {
        return $classDef.getToStringMethod().getSnippet();
    }

}
